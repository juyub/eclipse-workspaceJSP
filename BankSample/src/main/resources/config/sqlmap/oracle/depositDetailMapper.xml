<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="account.dao.DepositDetailDAO">

	<resultMap type="depositDetailVO" id="depositDetailMap">
		<result column="log_pk" property="logPk" />
		<result column="account_number" property="accountNumber" />
  		<result column="log_date" property="logDate" />
  		<result column="log_type_key" property="logTypeKey" />
  		<result column="to_account_number" property="toAccountNumber" />
  		<result column="to_name" property="toName" />
  		
  	</resultMap>


	
	
	
	<!-- 이번 달 내역 -->
	<select id="detailList" resultMap="depositDetailMap" parameterType="String">
		select 
			   d.account_number,
		       to_char(d.log_date,'YYYY"년 "MM"월 "DD"일("hh24"시 "mi"분)"') as log_date ,
		       d.amount,
		       l.value as log_type_key,
		       d.to_account_number,
		       d.to_name
		  from dw_card_log d left join log_type l
		       on d.log_type_key = l.key
		  where account_number = #{accountNumber} and
		  		extract(month from log_date) = extract(month from sysdate) and
                extract(year from log_date) = extract(year from sysdate)
		  order by log_date desc
	</select>
  	
  	<!-- 이번 달 -->
  	<select id="month" resultType="String">
  		select substr(to_char(sysdate),4,2) from dual
  	</select>
  	
  	
  	<!-- 저번 달, 앞 달 내역 -->
  	<select id="lastMonth" resultMap="depositDetailMap" parameterType="depositDetailVO">
  		select 
			   d.account_number,
		       to_char(d.log_date,'YYYY"년 "MM"월 "DD"일("hh24"시 "mi"분)"') as log_date ,
		       d.amount,
		       l.value as log_type_key,
		       d.to_account_number,
		       d.to_name
		  from dw_card_log d left join log_type l
		       on d.log_type_key = l.key
		  where account_number = #{accountNumber} and
		  		extract(month from log_date) = #{logDate} - 1 and
                extract(year from log_date) = extract(year from sysdate)
		  order by log_date desc
  	
  	</select>
  	
  	<!-- 카테고리별 내역 -->
  	<select id="category" resultMap="depositDetailMap" parameterType="depositDetailVO">
  		select 
			   d.account_number,
		       to_char(d.log_date,'YYYY"년 "MM"월 "DD"일("hh24"시 "mi"분)"') as log_date ,
		       d.amount,
		       l.value as log_type_key,
		       d.to_account_number,
		       d.to_name
		  from dw_card_log d left join log_type l
		       on d.log_type_key = l.key
		  where account_number = #{accountNumber} and
		  		extract(month from log_date) = #{logDate} and
                extract(year from log_date) = extract(year from sysdate) and
                log_type_key = #{logTypeKey}
		  order by log_date desc
  	</select>
  	
  	
  	<!-- 선택 카테고리의 저번 달 지출 총액 -->
  	<select id="lastMonthSumByCategory" resultType="int" parameterType="depositDetailVO">
	  	select sum(amount) from dw_card_log 
	 	 where extract(month from log_date) = extract(month from ADD_MONTHS( TRUNC(sysdate,'MM'), -1 )) and
	       	   account_number=#{accountNumber} and
	       	   log_type_key = #{logTypeKey}
  	</select>
  	
  	
  	<!-- 도전하기. 메인계좌의, 이번달, 해당 카테고리의 총 지출액 -->
  	<select id="nowBalanceByType" resultType="int" parameterType="depositDetailVO" >
  		select sum(amount) 
  		    from dw_card_log
 			where account_number = #{accountNumber} and
       			  log_type_key = #{logTypeKey} and
       			  extract(year from log_date) = extract(year from sysdate) and
       			  extract(month from log_date) = extract(month from sysdate)
  	</select>
  	
  	
  	<!-- 해당 계좌번호 이번 달 지출액 가져오기 -->
  	<select id="expenditureThisMonth" resultType="int" parameterType="String">
  		select sum(amount)
  			from dw_card_log
  			where account_number = #{accountNumber} and
  			log_type_key != '1' and
  			extract(year from log_date) = extract(year from sysdate) and
       		extract(month from log_date) = extract(month from sysdate)
  	</select>
  	
  	
  	
  	
  	<!-- 잦은 지출 순  -->
  	<select id="frequentExpenditure" resultType="depositDetailVO" parameterType="String">
		select distinct
		       d.to_name as toName,
               d.account_number as accountNumber,
               count(*)over(partition by d.to_name) as count
		  from dw_card_log d left join log_type l
		       on d.log_type_key = l.key
		  where account_number = #{accountNumber} and
		  		extract(month from log_date) = extract(month from sysdate) and
                extract(year from log_date) = extract(year from sysdate) and
                d.log_type_key != '1'
           order by count desc  	
  	</select>
  	
  	
  	
  	<!-- 선택된 이번달 잦은 지출 정보(날짜, 금액)  -->
  	<select id="getFrequentDetail" resultType="depositDetailVO" parameterType="depositDetailVO">
  		select to_char(log_date,'YYYY"년 "MM"월 "DD"일("hh24"시 "mi"분)"') as logDate, 
  		       amount,
  		       to_name as toName
  			from dw_card_log
  			where account_number = #{accountNumber} and
  			      to_name = #{toName} and
		  		  extract(month from log_date) = extract(month from sysdate) and
                  extract(year from log_date) = extract(year from sysdate) 
            order by log_date
  			
  	</select>
  	
  	
  	
  	<!-- 이번 달 지출 Top3 정보 -->
  	<select id="expenditureTop3" resultType="depositDetailVO" parameterType="String">
  	<![CDATA[
  	select amount, to_name as toName, account_number as accountNumber,
  		   to_char(log_date,'YYYY"년 "MM"월 "DD"일("hh24"시 "mi"분)"') as logDate
		from( select log_date, amount, to_name, account_number
		      from dw_card_log
		      where account_number = #{accountNumber} and
		            extract(month from log_date) = extract(month from sysdate) and
		            extract(year from log_date) = extract(year from sysdate) and
		            log_type_key != '2' and log_type_key !='1'         
		      order by amount desc)
		where rownum <= 3
  	]]>
  	</select>
  	
  	
  	
  	<!-- 이번 월 수입 알려주기 -->
  	<select id="depositByMonth1" resultType="int" parameterType="String">
  	select sum(amount) from dw_card_log 
	 	 where extract(month from log_date) = extract(month from ADD_MONTHS( TRUNC(sysdate,'MM'), 0 )) and
	       	   account_number=#{accountNumber} and
	       	   log_type_key = '1'
  	</select>
  	<!-- 저번 월 수입 알려주기 -->
  	<select id="depositByMonth2" resultType="int" parameterType="String">
  	select sum(amount) from dw_card_log 
	 	 where extract(month from log_date) = extract(month from ADD_MONTHS( TRUNC(sysdate,'MM'), -1 )) and
	       	   account_number=#{accountNumber} and
	       	   log_type_key = '1'
  	</select>  
  	<!-- 저저번 월 수입 알려주기 -->
  	<select id="depositByMonth3" resultType="int" parameterType="String">
  	select sum(amount) from dw_card_log 
	 	 where extract(month from log_date) = extract(month from ADD_MONTHS( TRUNC(sysdate,'MM'), -2 )) and
	       	   account_number=#{accountNumber} and
	       	   log_type_key = '1'
  	</select>  		
  	<!-- 저저저번 월 수입 알려주기 -->
  	<select id="depositByMonth4" resultType="int" parameterType="String">
  	select sum(amount) from dw_card_log 
	 	 where extract(month from log_date) = extract(month from ADD_MONTHS( TRUNC(sysdate,'MM'), -3 )) and
	       	   account_number=#{accountNumber} and
	       	   log_type_key = '1'
  	</select>  
  	
  	
  	<!-- 이번 월 지출 알려주기 -->
   	<select id="withdrawByMonth1" resultType="int" parameterType="String">
  	select sum(amount) from dw_card_log 
	 	 where extract(month from log_date) = extract(month from ADD_MONTHS( TRUNC(sysdate,'MM'), 0 )) and
	       	   account_number=#{accountNumber} and
	       	   log_type_key != '1'
  	</select>
  	<!-- 저번 월 지출 알려주기 -->
  	<select id="withdrawByMonth2" resultType="int" parameterType="String">
  	select sum(amount) from dw_card_log 
	 	 where extract(month from log_date) = extract(month from ADD_MONTHS( TRUNC(sysdate,'MM'), -1 )) and
	       	   account_number=#{accountNumber} and
	       	   log_type_key != '1'
  	</select>  
  	<!-- 저저번 월 지출 알려주기 -->
  	<select id="withdrawByMonth3" resultType="int" parameterType="String">
  	select sum(amount) from dw_card_log 
	 	 where extract(month from log_date) = extract(month from ADD_MONTHS( TRUNC(sysdate,'MM'), -2 )) and
	       	   account_number=#{accountNumber} and
	       	   log_type_key != '1'
  	</select>   	
  	<!-- 저저저번 월 지출 알려주기 -->
  	<select id="withdrawByMonth4" resultType="int" parameterType="String">
  	select sum(amount) from dw_card_log 
	 	 where extract(month from log_date) = extract(month from ADD_MONTHS( TRUNC(sysdate,'MM'), -3 )) and
	       	   account_number=#{accountNumber} and
	       	   log_type_key != '1'
  	</select>
  	
  	
  	<!-- 이번 달 주별 지출액 -->
  	<select id="expenditureByWeek" resultType="depositDetailVO" parameterType="String">
  	select to_char(log_date, 'IW') as week, sum(amount) as sumAmount
	 from dw_card_log
	 where log_type_key != '1' and 
	       account_number = #{accountNumber} and
	       extract(month from log_date) = extract(month from ADD_MONTHS( TRUNC(sysdate,'MM'), 0 )) and
	       extract(year from log_date) = extract(year from sysdate)
	 group by to_char(log_date, 'IW')
	 order by week
  	</select>
  	
  	
  	<!-- 페이징. 총 게시글 갯수 -->
  	<select id="countBoard" resultType="int">
  		select count(*) 
  		 from dw_card_log 
  		 where account_number = #{accountNumber}
  	</select>
  	
  	<!-- 페이징. 페이징 처리 후 게시글 조회 -->
  	<select id="selectBoard" resultType="depositDetailVO">
        select 
        	   rn, account_number as accountNumber, log_date as logDate, amount, log_type_key as logTypeKey, to_account_number as logAccountNumber, to_name as toName
  		 from( select rownum rn, A.*
  		 		from(		
  		  select 
			   d.account_number,
		       to_char(d.log_date,'YYYY"년 "MM"월 "DD"일("hh24"시 "mi"분)"') as log_date ,
		       d.amount,
		       l.value as log_type_key,
		       d.to_account_number,
		       d.to_name
		  from dw_card_log d left join log_type l
		       on d.log_type_key = l.key
		  where account_number = #{accountNumber} and
		  		extract(month from log_date) = extract(month from sysdate) and
                extract(year from log_date) = extract(year from sysdate)
		  order by log_date desc) A 
  		 )
  		 where rn between #{start} and #{end} 
  	</select>
  	
  	<!-- 페이징. 월 이동 -->
   	<select id="selectBoardMonthChange" resultType="depositDetailVO">
        select 
        	   rn, account_number as accountNumber, log_date as logDate, amount, log_type_key as logTypeKey, to_account_number as logAccountNumber, to_name as toName
  		 from( 
  		 select rownum rn, A.*
  		 		from(		
  		 	  		select 
						   d.account_number,
					       to_char(d.log_date,'YYYY"년 "MM"월 "DD"일("hh24"시 "mi"분)"') as log_date ,
					       d.amount,
					       l.value as log_type_key,
					       d.to_account_number,
					       d.to_name
					  from dw_card_log d left join log_type l
					       on d.log_type_key = l.key
					  where account_number = #{accountNumber} and
					  		extract(month from log_date) = #{logDate} - 1 and
			                extract(year from log_date) = extract(year from sysdate)
					  order by log_date desc) A 
  		        )
  		 where rn between #{start} and #{end} 
  	</select>
  	
  	 	
</mapper>