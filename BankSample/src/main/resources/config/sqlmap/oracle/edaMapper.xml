<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="eda.dao.EdaDAO">


	<!--이번달 카테고리별 지출 총액  -->
	<select id="amountByType" resultType="edaVO" parameterType="String">
		select log_type_key as logTypeKey, category, sum(amount) as totalAmountByType
		 from (select d.log_type_key, l.value as category, amount 
		        from dw_card_log d left join log_type l
		         on d.log_type_key = l.key
		        where account_number= #{accountNumber} and
		              extract(year from log_date) = extract(year from sysdate) and
		              extract(month from log_date) = extract(month from sysdate)  and
		              log_type_key != '1' and 
		              log_type_key != '2')
		 group by category, log_type_key
		 order by totalAmountByType desc
	</select>


	<!-- 해당 카테고리의 이번 달 내역 -->
	<select id="detailListByCotegory" resultType="depositDetailVO" parameterType="depositDetailVO">
	 select logDate, sum(amount) as sumAmount, toName
		 from(
		     select to_char(log_date, 'YYYY"년 "MM"월 "DD"일"') as logDate , 
		            amount,
		            to_name as toName
		      from dw_card_log 
		      where log_type_key = #{logTypeKey} and
		            account_number = #{accountNumber} and
		            extract(year from log_date) = extract(year from sysdate) and
		            extract(month from log_date) = extract(month from sysdate)   ) 
		 group by logDate, toName
		 order by logDate
	</select>
	
	<!-- 해당 카테고리의 저번 달 + 이번 달 내역 -->
	<select id="detailListByCotegory2" resultType="depositDetailVO" parameterType="depositDetailVO">
		select logDate, sum(amount) as sumAmount
		 from(
		     select to_char(d.log_date, 'MM"월 "DD"일"') as logDate, 
		            d.amount
		      from dw_card_log d left join log_type l
		            on d.log_type_key = l.key
		      where l.value = #{logTypeKey} and
		            d.account_number = #{accountNumber} and
		            extract(year from d.log_date) = extract(year from sysdate) and
		            ( extract(month from d.log_date) = extract(month from sysdate)  or extract(month from d.log_date) = extract(month from ADD_MONTHS( TRUNC(sysdate,'MM'), -1 )) )
		 )       
		 group by logDate
		 order by logDate
	</select>	
	
	
	
	<!-- 이번 달 카테고리별 지출 합 -->
	<select id="categorySum" resultType="depositDetailVO" parameterType="String">
		 select  sum(amount) as sumAmount, logTypeKey
			 from(
			     select to_char(d.log_date, 'YYYY"년 "MM"월 "DD"일"') as logDate , 
			            d.amount,
	                    l.value as logTypeKey
			      from dw_card_log d left join log_type l
	                    on d.log_type_key = l.key
			      where d.log_type_key != '1' and
	                    d.log_type_key != '2' and
			            d.account_number = #{accountNumber} and
			            extract(year from d.log_date) = extract(year from sysdate) and
			            extract(month from d.log_date) = extract(month from sysdate)   ) 
			 group by logTypeKey
	         order by sumAmount desc	
	</select>
	
	
	<!-- 정기 메일링 서비스 테이블에 insert -->
	<insert id="addMailService" parameterType="emailVO">
		insert into mail(no, id, to_mail, title, content)
		 values(seq_mail_no.nextval, #{id}, #{toMail}, #{title}, #{content})
	</insert>
	
	<!-- 정기 메일링 서비스 취소 -->
	<delete id="deleteMailService" parameterType="String">
		delete from mail
		 where id = #{id}
	</delete>
	
	<!-- 정기 메일링 서비스 리스트 -->
	<select id="getMailList" resultType="emailVO">
		select to_mail as toMail, title, content
		 from mail
	</select>
	
	<!-- 메일 서비스 구독 여부 -->
	<select id="mailServiceBool" resultType="int" parameterType="String">
		select count(*) 
		 from mail 
		 where id = #{id}
	</select>
</mapper>